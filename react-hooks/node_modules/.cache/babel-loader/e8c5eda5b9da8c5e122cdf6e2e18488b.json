{"ast":null,"code":"var _jsxFileName = \"/home/serpro/git/treinamentos/react/react-hooks/src/components/Usuarios/Usuarios.js\";\nimport React, { useState, useEffect } from 'react';\nimport AdicionarUsuario from '../AdicionarUsuario/AdicionarUsuario';\nimport Usuario from '../Usuario/Usuario';\nfunction Usuarios() {\n  const [usuarios, setUsuarios] = useState([]);\n  useEffect(() => {\n    fetch('https://reqres.in/api/users').then(resposta => resposta.json()).then(dados => {\n      const usuarios = dados.data.map(usuario => ({\n        id: usuario.id,\n        nome: usuario.first_name,\n        sobrenome: usuario.last_name,\n        email: usuario.email\n      }));\n      this.setState({\n        usuarios\n      });\n    });\n  });\n  const adicionarUsuario = usuario => {\n    setUsuarios(usuariosAtuais => [...usuariosAtuais, usuario]);\n  };\n  const removerUsuario = usuario => {\n    if (window.confirm(`Tem certeza que deseja remover \"${usuario.nome} ${usuario.sobrenome}\"?`)) {\n      fetch(`https://reqres.in/api/users/${usuario.id}`, {\n        method: 'DELETE'\n      }).then(resposta => {\n        if (resposta.ok) {\n          let usuarios = this.state.usuarios;\n          setUsuarios(usuarios.filter(x => x.id !== usuario.id));\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AdicionarUsuario, {\n    adicionarUsuario: adicionarUsuario,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), usuarios.map(usuario => /*#__PURE__*/React.createElement(Usuario, {\n    key: usuario.id,\n    usuario: usuario,\n    removerUsuario: () => removerUsuario(usuario),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n}\nexport default Usuarios;","map":{"version":3,"names":["React","useState","useEffect","AdicionarUsuario","Usuario","Usuarios","usuarios","setUsuarios","fetch","then","resposta","json","dados","data","map","usuario","id","nome","first_name","sobrenome","last_name","email","setState","adicionarUsuario","usuariosAtuais","removerUsuario","window","confirm","method","ok","state","filter","x","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","key"],"sources":["/home/serpro/git/treinamentos/react/react-hooks/src/components/Usuarios/Usuarios.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport AdicionarUsuario from '../AdicionarUsuario/AdicionarUsuario'\nimport Usuario from '../Usuario/Usuario'\n\nfunction Usuarios () {\n\n  const [usuarios, setUsuarios] = useState([])\n\n  useEffect (() =>{\n    fetch('https://reqres.in/api/users')\n      .then(resposta => resposta.json())\n      .then(dados => {\n        const usuarios = dados.data.map(usuario => ({\n          id: usuario.id,\n          nome: usuario.first_name,\n          sobrenome: usuario.last_name,\n          email: usuario.email\n        }))\n\n        this.setState({ usuarios })\n      })\n  })\n\n  const adicionarUsuario = (usuario) => {\n    setUsuarios(usuariosAtuais => [...usuariosAtuais, usuario])\n  }\n\n  const removerUsuario = (usuario) => {\n    if (window.confirm(`Tem certeza que deseja remover \"${usuario.nome} ${usuario.sobrenome}\"?`)) {\n      fetch(`https://reqres.in/api/users/${usuario.id}`, {\n        method: 'DELETE'\n      })\n        .then(resposta => {\n          if (resposta.ok) {\n            let usuarios = this.state.usuarios\n            setUsuarios(usuarios.filter(x => x.id !== usuario.id))\n          }\n        })\n    }\n  }\n  \n  return (\n    <>\n      <AdicionarUsuario adicionarUsuario={adicionarUsuario} />\n\n      {usuarios.map(usuario => (\n        <Usuario key={usuario.id}\n          usuario={usuario}\n          removerUsuario={() => removerUsuario(usuario)}\n        />\n      ))}\n    </>\n  )\n}\n\nexport default Usuarios"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,gBAAgB,MAAM,sCAAsC;AACnE,OAAOC,OAAO,MAAM,oBAAoB;AAExC,SAASC,QAAQA,CAAA,EAAI;EAEnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAE,MAAK;IACdM,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,KAAK,IAAI;MACb,MAAMN,QAAQ,GAAGM,KAAK,CAACC,IAAI,CAACC,GAAG,CAACC,OAAO,KAAK;QAC1CC,EAAE,EAAED,OAAO,CAACC,EAAE;QACdC,IAAI,EAAEF,OAAO,CAACG,UAAU;QACxBC,SAAS,EAAEJ,OAAO,CAACK,SAAS;QAC5BC,KAAK,EAAEN,OAAO,CAACM;MACjB,CAAC,CAAC,CAAC;MAEH,IAAI,CAACC,QAAQ,CAAC;QAAEhB;MAAS,CAAC,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,MAAMiB,gBAAgB,GAAIR,OAAO,IAAK;IACpCR,WAAW,CAACiB,cAAc,IAAI,CAAC,GAAGA,cAAc,EAAET,OAAO,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMU,cAAc,GAAIV,OAAO,IAAK;IAClC,IAAIW,MAAM,CAACC,OAAO,CAAC,mCAAmCZ,OAAO,CAACE,IAAI,IAAIF,OAAO,CAACI,SAAS,IAAI,CAAC,EAAE;MAC5FX,KAAK,CAAC,+BAA+BO,OAAO,CAACC,EAAE,EAAE,EAAE;QACjDY,MAAM,EAAE;MACV,CAAC,CAAC,CACCnB,IAAI,CAACC,QAAQ,IAAI;QAChB,IAAIA,QAAQ,CAACmB,EAAE,EAAE;UACf,IAAIvB,QAAQ,GAAG,IAAI,CAACwB,KAAK,CAACxB,QAAQ;UAClCC,WAAW,CAACD,QAAQ,CAACyB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAChB,EAAE,KAAKD,OAAO,CAACC,EAAE,CAAC,CAAC;QACxD;MACF,CAAC,CAAC;IACN;EACF,CAAC;EAED,oBACEhB,KAAA,CAAAiC,aAAA,CAAAjC,KAAA,CAAAkC,QAAA,qBACElC,KAAA,CAAAiC,aAAA,CAAC9B,gBAAgB;IAACoB,gBAAgB,EAAEA,gBAAiB;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAEvDlC,QAAQ,CAACQ,GAAG,CAACC,OAAO,iBACnBf,KAAA,CAAAiC,aAAA,CAAC7B,OAAO;IAACqC,GAAG,EAAE1B,OAAO,CAACC,EAAG;IACvBD,OAAO,EAAEA,OAAQ;IACjBU,cAAc,EAAEA,CAAA,KAAMA,cAAc,CAACV,OAAO,CAAE;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC/C,CACF,CACD,CAAC;AAEP;AAEA,eAAenC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}